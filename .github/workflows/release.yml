name: Release

on:
  push:
    tags:
    - 'v*'
    - 't*'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19

      - name: Check out repository into the Go module directory
        uses: actions/checkout@v3

      - name: Fetch repository dependencies
        run: go get -v -t ./...

      - name: Set environment variables
        run: |
          echo "GO111MODULE=on" >> $GITHUB_ENV
          # Release version is ref name without leading character.
          RELEASE_VERSION=$(echo ${{ github.ref_name }} | sed -e 's/^[vt]//')
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Compile linux AMD64
        run: |
          GOOS=linux GOARCH=amd64 go build -tags osusergo,netgo -ldflags="-extldflags=-static" -v -ldflags="-X github.com/wealdtech/ethereal/cmd.ReleaseVersion=${{ env.RELEASE_VERSION }}"
          tar zcf ethereal-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz ethereal
          sha256sum ethereal-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz >ethereal-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz.sha256

      - name: Compile linux ARM64
        run: |
          GOOS=linux GOARCH=arm64 go build -tags osusergo,netgo -ldflags="-extldflags=-static" -v -ldflags="-X github.com/wealdtech/ethereal/cmd.ReleaseVersion=${{ env.RELEASE_VERSION }}"
          tar zcf ethereal-${{ env.RELEASE_VERSION }}-linux-arm64.tar.gz ethereal
          sha256sum ethereal-${{ env.RELEASE_VERSION }}-linux-arm64.tar.gz >ethereal-${{ env.RELEASE_VERSION }}-linux-arm64.tar.gz.sha256

      - name: Compile windows
        run: |
          GOOS=windows GOARCH=amd64 go build -tags osusergo,netgo -ldflags="-extldflags=-static" -v -ldflags="-X github.com/wealdtech/ethereal/cmd.ReleaseVersion=${{ env.RELEASE_VERSION }}"
          zip --junk-paths ethereal-${{ env.RELEASE_VERSION }}-windows-exe.zip ethereal.exe
          sha256sum ethereal-${{ env.RELEASE_VERSION }}-windows-exe.zip >ethereal-${{ env.RELEASE_VERSION }}-windows-exe.zip.sha256

      - name: Compile osx AMD64
        run: |
          GOOS=darwin GOARCH=amd64 go build -tags osusergo,netgo -ldflags="-extldflags=-static" -v -ldflags="-X github.com/wealdtech/ethereal/cmd.ReleaseVersion=${{ env.RELEASE_VERSION }}"
          tar zcf ethereal-${{ env.RELEASE_VERSION }}-darwin-amd64.tar.gz ethereal
          sha256sum ethereal-${{ env.RELEASE_VERSION }}-darwin-amd64.tar.gz >ethereal-${{ env.RELEASE_VERSION }}-darwin-amd64.tar.gz.sha256

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          prerelease: false
          files: |
            ethereal-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz
            ethereal-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz.sha256
            ethereal-${{ env.RELEASE_VERSION }}-linux-arm64.tar.gz
            ethereal-${{ env.RELEASE_VERSION }}-linux-arm64.tar.gz.sha256
            ethereal-${{ env.RELEASE_VERSION }}-windows-exe.zip
            ethereal-${{ env.RELEASE_VERSION }}-windows-exe.zip.sha256
            ethereal-${{ env.RELEASE_VERSION }}-darwin-amd64.tar.gz
            ethereal-${{ env.RELEASE_VERSION }}-darwin-amd64.tar.gz.sha256
